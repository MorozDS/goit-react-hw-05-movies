{"version":3,"file":"static/js/14.77b5661b.chunk.js","mappings":"oLACA,EAAyB,2B,SCEV,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,mBACEC,UAAWC,EACXC,KAAK,SACLC,QAAS,kBAAML,GAAU,EAAhB,EAHX,oBAQH,C,0FCdD,EAAuB,wB,mBCIR,SAASM,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAGlE,OACE,iCACE,SAACd,EAAA,EAAD,KACA,iBAAKG,UAAWY,EAAhB,WACE,gBACEC,IAAG,yCAAoCP,GACvCQ,IAAG,UAAKP,EAAL,cAGL,4BACE,0BACGA,EADH,KAEGC,EACGA,EAAaO,MAAM,EAAG,GACtB,4BAJN,QAOA,wCAAgBC,KAAKC,MAAqB,GAAfR,GAA3B,QACA,sCACA,uBAAIC,GAAsB,2BAC1B,oCACA,oCAAKC,QAAL,IAAKA,OAAL,EAAKA,EAAQO,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,eAGvC,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAI,OAAQC,SAAS,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMD,GAAI,UAAWC,SAAS,EAA9B,4BAOT,C,kCC1Cc,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOtB,EAAP,KAAcuB,EAAd,KACM9B,GAAWC,EAAAA,EAAAA,MAUjB,OARA8B,EAAAA,EAAAA,YAAU,WACJC,MAAML,IAAYA,EAAQM,OAAS,EACrCjC,EAAS,MAETkC,EAAAA,EAAAA,IAAkBP,GAASQ,KAAKL,EAEnC,GAAE,CAACH,EAAS3B,KAGX,iCACE,SAACM,EAAD,CAAWC,MAAOA,KAClB,SAAC,KAAD,MAGL,C,4MCvBY6B,EAAU,mCAIhB,SAAeC,IAAtB,+B,aAAO,O,oBAAA,4IACE,EACPC,EAFK,+BAEQ,QACbC,EAHK,+BAGS,MAHT,SAKkBC,IAAM,yCAAD,OACeF,EADf,YAC6BC,EAD7B,oBACoDH,IAN3E,uBAKGK,EALH,EAKGA,KALH,kBAQEA,GARF,mEAYA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAgCC,GAAhC,gGAAuCC,EAAvC,+BAA8C,EAAGC,EAAjD,+BAA4D,QAA5D,SACkBL,IAAM,qDAAD,OAC2BJ,EAD3B,qBAC+CS,EAD/C,kBACiEF,EADjE,iBAC+EC,IAFtG,uBACGH,EADH,EACGA,KADH,kBAIEA,GAJF,mEAQA,SAAeP,EAAtB,kC,aAAO,O,oBAAA,WAAiCY,GAAjC,8FAA2CD,EAA3C,+BAAsD,QAAtD,SACkBL,IAAM,sCAAD,OACYM,EADZ,oBACgCV,EADhC,qBACoDS,IAF3E,uBACGJ,EADH,EACGA,KADH,kBAIEA,GAJF,mEASA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA4BD,GAA5B,8FAAsCD,EAAtC,+BAAiD,QAAjD,SACkBL,IAAM,sCAAD,OACYM,EADZ,4BACwCV,EADxC,qBAC4DS,IAFnF,uBACGJ,EADH,EACGA,KADH,kBAIEA,GAJF,mEAQA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WACLF,GADK,gGAELF,EAFK,+BAEE,EACPC,EAHK,+BAGM,QAHN,SAKkBL,IAAM,sCAAD,OACYM,EADZ,4BACwCV,EADxC,qBAC4DS,EAD5D,iBAC6ED,IANpG,uBAKGH,EALH,EAKGA,KALH,kBAQEA,GARF,mE","sources":["webpack://react-homework-template/./src/components/Button/BackButton.module.css?783c","components/Button/BackButton.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"BackButton_button__vgqeq\"};","import { useNavigate } from 'react-router-dom';\nimport styles from './BackButton.module.css';\n\nexport default function BackButton() {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className={styles.button}\n      type=\"button\"\n      onClick={() => navigate(-1)}\n    >\n      Go Back\n    </button>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieCard_card__G6MP-\"};","import { Link } from 'react-router-dom';\nimport s from 'components/MovieCard/MovieCard.module.css';\nimport BackButton from 'components/Button/BackButton';\nimport PropTypes from 'prop-types';\n\nexport default function MovieCard({ movie }) {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <>\n      <BackButton />\n      <div className={s.card}>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={`${title} Poster`}\n        />\n\n        <div>\n          <h2>\n            {title} (\n            {release_date\n              ? release_date.slice(0, 4)\n              : 'No Release Year Available'}\n            )\n          </h2>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview ? overview : 'No Overview Available'}</p>\n          <h3>Genres</h3>\n          <p> {genres?.map(g => g.name).join(',')}</p>\n        </div>\n      </div>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to={'cast'} replace={true}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={'reviews'} replace={true}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { fetchDetailsMovie } from 'services/api';\nimport { Outlet } from 'react-router-dom';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isNaN(movieId) || movieId.length > 6) {\n      navigate('/');\n    } else {\n      fetchDetailsMovie(movieId).then(setMovie);\n    }\n  }, [movieId, navigate]);\n\n  return (\n    <>\n      <MovieCard movie={movie} />\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport const API_KEY = '9c65dafe9c7f1692e7e37e0f21a522e0';\n\n// Запрос трендових фильмов\n\nexport async function fetchTrendingMovies(\n  page = 1,\n  media_type = 'movie',\n  time_window = 'day'\n) {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/trending/${media_type}/${time_window}?api_key=${API_KEY}`\n  );\n  return data;\n}\n\n//  поиск кинофильма по ключевому слову на странице фильмов\nexport async function fetchSearchQuery(query, page = 1, language = 'en-US') {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=${language}&query=${query}&page=${page}`\n  );\n  return data;\n}\n//  запрос полной информации о фильме для страницы кинофильма\n\nexport async function fetchDetailsMovie(movie_id, language = 'en-US') {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=${language}`\n  );\n  return data;\n}\n\n// запрос информации о актёрском составе для страницы кинофильма\n\nexport async function fetchCredits(movie_id, language = 'en-US') {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_KEY}&language=${language}`\n  );\n  return data;\n}\n\n// запрос обзоров для страницы кинофильма\nexport async function fetchMovieReviews(\n  movie_id,\n  page = 1,\n  language = 'en-US'\n) {\n  const { data } = await axios(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}&language=${language}&page=${page}`\n  );\n  return data;\n}\n"],"names":["BackButton","navigate","useNavigate","className","styles","type","onClick","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","s","src","alt","slice","Math","round","map","g","name","join","to","replace","MovieDetailsPage","movieId","useParams","useState","setMovie","useEffect","isNaN","length","fetchDetailsMovie","then","API_KEY","fetchTrendingMovies","media_type","time_window","axios","data","fetchSearchQuery","query","page","language","movie_id","fetchCredits","fetchMovieReviews"],"sourceRoot":""}